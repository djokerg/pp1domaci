INFO  16:50:56,090 - Compiling source file: C:\Users\gd200089d\Desktop\pp1domaci\MJCompiler\test\program.mj
INFO  16:50:56,162 - #2 program
INFO  16:50:56,162 - #45 test302
INFO  16:50:56,162 - #3 namespace
INFO  16:50:56,163 - #45 Addition
INFO  16:50:56,163 - #4 {
INFO  16:50:56,164 - #4 {
INFO  16:50:56,164 - #45 int
INFO  16:50:56,165 - #45 sum
INFO  16:50:56,165 - #40 (
INFO  16:50:56,165 - #45 int
INFO  16:50:56,165 - #45 z
INFO  16:50:56,165 - #38 ,
INFO  16:50:56,167 - #45 int
INFO  16:50:56,167 - #45 d
INFO  16:50:56,167 - #41 )
INFO  16:50:56,167 - #4 {
INFO  16:50:56,168 - #14 return
INFO  16:50:56,169 - #45 z
INFO  16:50:56,169 - #20 +
INFO  16:50:56,169 - #45 d
INFO  16:50:56,171 - #36 ;
INFO  16:50:56,171 - #5 }
INFO  16:50:56,171 - #45 int
INFO  16:50:56,172 - #45 inkrement
INFO  16:50:56,172 - #40 (
INFO  16:50:56,173 - #45 int
INFO  16:50:56,173 - #45 a
INFO  16:50:56,173 - #38 ,
INFO  16:50:56,173 - #45 int
INFO  16:50:56,173 - #45 inc
INFO  16:50:56,173 - #41 )
INFO  16:50:56,173 - #45 int
INFO  16:50:56,173 - #45 pom
INFO  16:50:56,173 - #36 ;
INFO  16:50:56,174 - #4 {
INFO  16:50:56,174 - #10 if
INFO  16:50:56,174 - #40 (
INFO  16:50:56,175 - #45 inc
INFO  16:50:56,175 - #25 ==
INFO  16:50:56,175 - #46 1
INFO  16:50:56,176 - #41 )
INFO  16:50:56,176 - #45 pom
INFO  16:50:56,177 - #33 =
INFO  16:50:56,177 - #46 1
INFO  16:50:56,178 - #36 ;
INFO  16:50:56,178 - #8 else
INFO  16:50:56,179 - #10 if
INFO  16:50:56,179 - #40 (
INFO  16:50:56,179 - #45 inc
INFO  16:50:56,179 - #25 ==
INFO  16:50:56,179 - #46 2
INFO  16:50:56,180 - #41 )
INFO  16:50:56,180 - #45 pom
INFO  16:50:56,180 - #33 =
INFO  16:50:56,180 - #45 a
INFO  16:50:56,180 - #36 ;
INFO  16:50:56,180 - #14 return
INFO  16:50:56,181 - #45 sum
INFO  16:50:56,181 - #40 (
INFO  16:50:56,181 - #45 a
INFO  16:50:56,181 - #38 ,
INFO  16:50:56,181 - #45 pom
INFO  16:50:56,181 - #41 )
INFO  16:50:56,181 - #36 ;
INFO  16:50:56,181 - #5 }
INFO  16:50:56,182 - #5 }
INFO  16:50:56,182 - #5 }
INFO  16:50:56,182 - #3 namespace
INFO  16:50:56,183 - #45 Unpacking
INFO  16:50:56,183 - #4 {
INFO  16:50:56,183 - #45 int
INFO  16:50:56,183 - #45 niz
INFO  16:50:56,183 - #42 [
INFO  16:50:56,183 - #43 ]
INFO  16:50:56,183 - #38 ,
INFO  16:50:56,184 - #45 niz2
INFO  16:50:56,184 - #42 [
INFO  16:50:56,184 - #43 ]
INFO  16:50:56,184 - #38 ,
INFO  16:50:56,184 - #45 niz3
INFO  16:50:56,184 - #42 [
INFO  16:50:56,184 - #43 ]
INFO  16:50:56,184 - #36 ;
INFO  16:50:56,184 - #45 int
INFO  16:50:56,184 - #45 a
INFO  16:50:56,184 - #38 ,
INFO  16:50:56,184 - #45 b
INFO  16:50:56,185 - #36 ;
INFO  16:50:56,185 - #4 {
INFO  16:50:56,185 - #5 }
INFO  16:50:56,185 - #5 }
INFO  16:50:56,185 - #45 int
INFO  16:50:56,185 - #45 i
INFO  16:50:56,185 - #36 ;
INFO  16:50:56,185 - #45 bool
INFO  16:50:56,185 - #45 ibool
INFO  16:50:56,185 - #36 ;
INFO  16:50:56,185 - #45 int
INFO  16:50:56,185 - #45 niz2
INFO  16:50:56,185 - #36 ;
INFO  16:50:56,185 - #45 int
INFO  16:50:56,185 - #45 niz
INFO  16:50:56,185 - #42 [
INFO  16:50:56,185 - #43 ]
INFO  16:50:56,185 - #36 ;
INFO  16:50:56,185 - #45 int
INFO  16:50:56,185 - #45 a
INFO  16:50:56,185 - #38 ,
INFO  16:50:56,185 - #45 b
INFO  16:50:56,185 - #45 b
ERROR 16:50:56,185 - 
Sintaksna greska na liniji 40
INFO  16:50:56,185 - #38 ,
INFO  16:50:56,185 - #45 curr
INFO  16:50:56,185 - #36 ;
INFO  16:50:56,186 - #4 {
INFO  16:50:56,186 - #15 void
INFO  16:50:56,186 - #45 main
ERROR 16:50:56,186 - Izvrsen oporavak do ; u liniji 40
INFO  16:50:56,187 - #40 (
INFO  16:50:56,187 - #41 )
INFO  16:50:56,187 - #4 {
INFO  16:50:56,187 - #5 }
INFO  16:50:56,187 - #5 }
INFO  16:50:56,192 - Program(
  ProgName(
   test302
  ) [ProgName]
  Namespaces(
    Namespaces(
      NoNamespace(
      ) [NoNamespace]
      Namespace(
        NamespaceName(
         Addition
        ) [NamespaceName]
        NoDeclarationList(
        ) [NoDeclarationList]
        MethodDecls(
          MethodDecls(
            NoMethodDecl(
            ) [NoMethodDecl]
            MethodDecl(
              MethodWithType(
                NormalType(
                 int
                ) [NormalType]
               sum
              ) [MethodWithType]
              PossibleFormParsDeclared(
                FormParsList(
                  SignleFromParam(
                    FormParam(
                      NormalType(
                       int
                      ) [NormalType]
                     z
                      NoPossibleArrayDecl(
                      ) [NoPossibleArrayDecl]
                    ) [FormParam]
                  ) [SignleFromParam]
                  FormParam(
                    NormalType(
                     int
                    ) [NormalType]
                   d
                    NoPossibleArrayDecl(
                    ) [NoPossibleArrayDecl]
                  ) [FormParam]
                ) [FormParsList]
              ) [PossibleFormParsDeclared]
              NoVarDecl(
              ) [NoVarDecl]
              Statements(
                NoStatement(
                ) [NoStatement]
                StatementReturnExpr(
                  GeneralExpr(
                    ExprTerm(
                      TermFactor(
                        FactorDesignator(
                          DesignatorWONamespace(
                           z
                          ) [DesignatorWONamespace]
                        ) [FactorDesignator]
                      ) [TermFactor]
                    ) [ExprTerm]
                    AddopPLUS(
                    ) [AddopPLUS]
                    TermFactor(
                      FactorDesignator(
                        DesignatorWONamespace(
                         d
                        ) [DesignatorWONamespace]
                      ) [FactorDesignator]
                    ) [TermFactor]
                  ) [GeneralExpr]
                ) [StatementReturnExpr]
              ) [Statements]
            ) [MethodDecl]
          ) [MethodDecls]
          MethodDecl(
            MethodWithType(
              NormalType(
               int
              ) [NormalType]
             inkrement
            ) [MethodWithType]
            PossibleFormParsDeclared(
              FormParsList(
                SignleFromParam(
                  FormParam(
                    NormalType(
                     int
                    ) [NormalType]
                   a
                    NoPossibleArrayDecl(
                    ) [NoPossibleArrayDecl]
                  ) [FormParam]
                ) [SignleFromParam]
                FormParam(
                  NormalType(
                   int
                  ) [NormalType]
                 inc
                  NoPossibleArrayDecl(
                  ) [NoPossibleArrayDecl]
                ) [FormParam]
              ) [FormParsList]
            ) [PossibleFormParsDeclared]
            VarDecls(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclNormal(
                NormalType(
                 int
                ) [NormalType]
                MultipleVarDeclSingleVar(
                  SingleVar(
                   pom
                    NoPossibleArrayDecl(
                    ) [NoPossibleArrayDecl]
                  ) [SingleVar]
                ) [MultipleVarDeclSingleVar]
              ) [VarDeclNormal]
            ) [VarDecls]
            Statements(
              Statements(
                NoStatement(
                ) [NoStatement]
                IfElseStatement(
                  IfBlock(
                    IfConditionEndDetected(
                      IfStartDetected(
                      ) [IfStartDetected]
                      NormalCondition(
                        NormalCondTerm(
                          RelopCondFact(
                            ExprTerm(
                              TermFactor(
                                FactorDesignator(
                                  DesignatorWONamespace(
                                   inc
                                  ) [DesignatorWONamespace]
                                ) [FactorDesignator]
                              ) [TermFactor]
                            ) [ExprTerm]
                            RelopEQUAL(
                            ) [RelopEQUAL]
                            ExprTerm(
                              TermFactor(
                                FactorNum(
                                 1
                                ) [FactorNum]
                              ) [TermFactor]
                            ) [ExprTerm]
                          ) [RelopCondFact]
                        ) [NormalCondTerm]
                      ) [NormalCondition]
                    ) [IfConditionEndDetected]
                    StatementWDesignatorStmt(
                      DesignatorStmtAssign(
                        DesignatorWONamespace(
                         pom
                        ) [DesignatorWONamespace]
                        Assignop(
                        ) [Assignop]
                        ExprTerm(
                          TermFactor(
                            FactorNum(
                             1
                            ) [FactorNum]
                          ) [TermFactor]
                        ) [ExprTerm]
                      ) [DesignatorStmtAssign]
                    ) [StatementWDesignatorStmt]
                  ) [IfBlock]
                  IfStatement(
                    IfBlock(
                      IfConditionEndDetected(
                        IfStartDetected(
                        ) [IfStartDetected]
                        NormalCondition(
                          NormalCondTerm(
                            RelopCondFact(
                              ExprTerm(
                                TermFactor(
                                  FactorDesignator(
                                    DesignatorWONamespace(
                                     inc
                                    ) [DesignatorWONamespace]
                                  ) [FactorDesignator]
                                ) [TermFactor]
                              ) [ExprTerm]
                              RelopEQUAL(
                              ) [RelopEQUAL]
                              ExprTerm(
                                TermFactor(
                                  FactorNum(
                                   2
                                  ) [FactorNum]
                                ) [TermFactor]
                              ) [ExprTerm]
                            ) [RelopCondFact]
                          ) [NormalCondTerm]
                        ) [NormalCondition]
                      ) [IfConditionEndDetected]
                      StatementWDesignatorStmt(
                        DesignatorStmtAssign(
                          DesignatorWONamespace(
                           pom
                          ) [DesignatorWONamespace]
                          Assignop(
                          ) [Assignop]
                          ExprTerm(
                            TermFactor(
                              FactorDesignator(
                                DesignatorWONamespace(
                                 a
                                ) [DesignatorWONamespace]
                              ) [FactorDesignator]
                            ) [TermFactor]
                          ) [ExprTerm]
                        ) [DesignatorStmtAssign]
                      ) [StatementWDesignatorStmt]
                    ) [IfBlock]
                  ) [IfStatement]
                ) [IfElseStatement]
              ) [Statements]
              StatementReturnExpr(
                ExprTerm(
                  TermFactor(
                    FactorCall(
                      DesignatorWONamespace(
                       sum
                      ) [DesignatorWONamespace]
                      FactorCallPossibleParsYes(
                        ActParams(
                          ActParam(
                            ExprTerm(
                              TermFactor(
                                FactorDesignator(
                                  DesignatorWONamespace(
                                   a
                                  ) [DesignatorWONamespace]
                                ) [FactorDesignator]
                              ) [TermFactor]
                            ) [ExprTerm]
                          ) [ActParam]
                          ExprTerm(
                            TermFactor(
                              FactorDesignator(
                                DesignatorWONamespace(
                                 pom
                                ) [DesignatorWONamespace]
                              ) [FactorDesignator]
                            ) [TermFactor]
                          ) [ExprTerm]
                        ) [ActParams]
                      ) [FactorCallPossibleParsYes]
                    ) [FactorCall]
                  ) [TermFactor]
                ) [ExprTerm]
              ) [StatementReturnExpr]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDecls]
      ) [Namespace]
    ) [Namespaces]
    Namespace(
      NamespaceName(
       Unpacking
      ) [NamespaceName]
      DeclarationListVarDecl(
        DeclarationListVarDecl(
          NoDeclarationList(
          ) [NoDeclarationList]
          VarDeclNormal(
            NormalType(
             int
            ) [NormalType]
            MultipleVarDecls(
              MultipleVarDecls(
                MultipleVarDeclSingleVar(
                  SingleVar(
                   niz
                    PossibleArrayDeclYes(
                    ) [PossibleArrayDeclYes]
                  ) [SingleVar]
                ) [MultipleVarDeclSingleVar]
                SingleVar(
                 niz2
                  PossibleArrayDeclYes(
                  ) [PossibleArrayDeclYes]
                ) [SingleVar]
              ) [MultipleVarDecls]
              SingleVar(
               niz3
                PossibleArrayDeclYes(
                ) [PossibleArrayDeclYes]
              ) [SingleVar]
            ) [MultipleVarDecls]
          ) [VarDeclNormal]
        ) [DeclarationListVarDecl]
        VarDeclNormal(
          NormalType(
           int
          ) [NormalType]
          MultipleVarDecls(
            MultipleVarDeclSingleVar(
              SingleVar(
               a
                NoPossibleArrayDecl(
                ) [NoPossibleArrayDecl]
              ) [SingleVar]
            ) [MultipleVarDeclSingleVar]
            SingleVar(
             b
              NoPossibleArrayDecl(
              ) [NoPossibleArrayDecl]
            ) [SingleVar]
          ) [MultipleVarDecls]
        ) [VarDeclNormal]
      ) [DeclarationListVarDecl]
      NoMethodDecl(
      ) [NoMethodDecl]
    ) [Namespace]
  ) [Namespaces]
  DeclarationListVarDecl(
    DeclarationListVarDecl(
      DeclarationListVarDecl(
        DeclarationListVarDecl(
          DeclarationListVarDecl(
            NoDeclarationList(
            ) [NoDeclarationList]
            VarDeclNormal(
              NormalType(
               int
              ) [NormalType]
              MultipleVarDeclSingleVar(
                SingleVar(
                 i
                  NoPossibleArrayDecl(
                  ) [NoPossibleArrayDecl]
                ) [SingleVar]
              ) [MultipleVarDeclSingleVar]
            ) [VarDeclNormal]
          ) [DeclarationListVarDecl]
          VarDeclNormal(
            NormalType(
             bool
            ) [NormalType]
            MultipleVarDeclSingleVar(
              SingleVar(
               ibool
                NoPossibleArrayDecl(
                ) [NoPossibleArrayDecl]
              ) [SingleVar]
            ) [MultipleVarDeclSingleVar]
          ) [VarDeclNormal]
        ) [DeclarationListVarDecl]
        VarDeclNormal(
          NormalType(
           int
          ) [NormalType]
          MultipleVarDeclSingleVar(
            SingleVar(
             niz2
              NoPossibleArrayDecl(
              ) [NoPossibleArrayDecl]
            ) [SingleVar]
          ) [MultipleVarDeclSingleVar]
        ) [VarDeclNormal]
      ) [DeclarationListVarDecl]
      VarDeclNormal(
        NormalType(
         int
        ) [NormalType]
        MultipleVarDeclSingleVar(
          SingleVar(
           niz
            PossibleArrayDeclYes(
            ) [PossibleArrayDeclYes]
          ) [SingleVar]
        ) [MultipleVarDeclSingleVar]
      ) [VarDeclNormal]
    ) [DeclarationListVarDecl]
    VarDeclError(
    ) [VarDeclError]
  ) [DeclarationListVarDecl]
  MethodDecls(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      VoidMethod(
       main
      ) [VoidMethod]
      NoPossibleFormPars(
      ) [NoPossibleFormPars]
      NoVarDecl(
      ) [NoVarDecl]
      NoStatement(
      ) [NoStatement]
    ) [MethodDecl]
  ) [MethodDecls]
) [Program]
INFO  16:50:56,192 - ===================================
INFO  16:50:56,197 - Obradjuje se metod Addition::sum na liniji 9
INFO  16:50:56,198 - Obradjuje se metod Addition::inkrement na liniji 15
INFO  16:50:56,198 - Deklarisana promenljiva pom na liniji 16
INFO  16:50:56,198 - Pronadjen poziv funkcije Addition::sum na liniji 21
INFO  16:50:56,198 - Deklarisana promenljiva niz na liniji 28
INFO  16:50:56,198 - Deklarisana promenljiva niz2 na liniji 28
INFO  16:50:56,198 - Deklarisana promenljiva niz3 na liniji 28
INFO  16:50:56,198 - Deklarisana promenljiva a na liniji 29
INFO  16:50:56,198 - Deklarisana promenljiva b na liniji 29
INFO  16:50:56,198 - Deklarisana promenljiva i na liniji 34
INFO  16:50:56,199 - Deklarisana promenljiva ibool na liniji 35
INFO  16:50:56,199 - Deklarisana promenljiva niz2 na liniji 37
INFO  16:50:56,199 - Deklarisana promenljiva niz na liniji 39
INFO  16:50:56,199 - Obradjuje se metod main na liniji 44
INFO  16:50:56,199 - ===================================
ERROR 16:50:56,199 - Parsiranje nije uspesno zavrseno!
